@using ShopWatch.WebMvc.ViewModels.Customer
@model RegisterViewModel
@{ ViewBag.Title = "Register"; }

<h2>@ViewBag.Title.</h2>

<h4>Tạo tài khoản</h4>
<hr />
<div style="position: relative; padding-right: 15px; padding-left: 15px">
	<p style="color:red">
		@ViewBag.MessageRegister
	</p>
</div>
<form action="~/Account/Register" method="post" class="row form-horizontal" role="form" enctype="multipart/form-data">
	@Html.AntiForgeryToken()
	@if (ViewData["SuccessMsg"] != null)
	{
<div class="alert alert-success" role="alert">
	<strong>Chúc mừng bạn!đã đăng ký thành công. </strong>
	<br />Vui lòng click <a href="/Account/Login">vào đây</a> để đăng nhập.
</div>}
else
{
<div asp-validation-summary="All" class="text-danger"></div>
				<div class="col">
					<div class="form-group">
						@Html.LabelFor(m => m.Name, new { @class = "control-label" })
						<div>
							@Html.TextBoxFor(m => m.Name, new { @class = "form-control", autofocus = "autofocus", id = "name" })
							@Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(m => m.BirthDate, new { @class = "control-label" })
						<div>
							@Html.TextBoxFor(m => m.BirthDate, new { @class = "form-control", type = "date", id = "birthdate" })
							@Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(m => m.City, new { @class = "control-label" })
						<div>
							@Html.TextBoxFor(m => m.City, new { @class = "form-control", id = "city" })
							@Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(m => m.Address, new { @class = "control-label" })
						<div>
							@Html.TextBoxFor(m => m.Address, new { @class = "form-control", id = "address" })
							@Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
						</div>
					</div>

				</div>
								<div class="col">
									<div class="form-group">
										@Html.LabelFor(m => m.Email, new { @class = "control-label" })
										<div>
											@Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "mail", id = "email" })
											@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
										</div>
									</div>
									<div class="form-group">
										@Html.LabelFor(m => m.Phone, new { @class = "control-label" })
										<div>
											@Html.TextBoxFor(m => m.Phone, new { @class = "form-control", id = "phone" })
											@Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
										</div>
									</div>
									<div class="form-group">
										@Html.LabelFor(m => m.AccountName, new { @class = "control-label" })
										<div>
											@Html.TextBoxFor(m => m.AccountName, new { @class = "form-control", id = "accountname" })
											@Html.ValidationMessageFor(m => m.AccountName, "", new { @class = "text-danger" })
										</div>
									</div>
									<div class="form-group">
										@Html.LabelFor(m => m.Password, new { @class = "control-label" })
										<div>
											@Html.TextBoxFor(m => m.Password, new { @class = "form-control", type = "password", id = "password" })
											@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="form-group">
										@Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
										<div>
											@Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", type = "password", id = "confirmpassword" })
											@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
										</div>
									</div>

								</div>
												<div class="col-12 text-center">
													<input type="submit" class="btn btn-primary" value="Register" />
												</div>}
</form>


